name: Spring Boot CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
#      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
#          server-id: github
#          settings-path: ${{ github.workspace }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      - name: Start Spring Boot
        run: ./gradlew bootRun &
        timeout-minutes: 2  # 충분한 시간을 주어 애플리케이션이 시작될 수 있도록 합니다

      - name: Update test script permission
        run: chmod +x ./src/test/test2.sh

      - name: Run HTTP Tests
        run: ./src/test/test2.sh

#      - name: Run tests
#        run: ./gradlew test

      # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
      # the publishing section of your build.gradle
#      - name: Publish to GitHub Packages
#        run: ./gradlew publish
#        env:
#          USERNAME: ${{ github.actor }}
#          TOKEN: ${{ secrets.GITHUB_TOKEN }}

#  dependency-submission:
#
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
#      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
#      - name: Generate and submit dependency graph
#        uses: gradle/actions/dependency-submission@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0